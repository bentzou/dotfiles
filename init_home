#!/bin/bash

backup () {
   # backup FILE_OR_DIR

   local in_path
   local out_path
   local index

   in_path="$(builtin cd "$(dirname "$1")"; builtin pwd)/$(basename "$1")"

   if [[ ! -f "$in_path" && ! -d "$in_path" ]]; then
      echo "$FUNCNAME: $1: No such file or directory" >&2
      return 1
   fi

   out_path="$in_path.bak"
   index=1
   while [[ -f "$out_path" || -d "$out_path" ]]; do
      out_path="$in_path.bak$index"
      ((index++))
   done

   mv "$in_path" "$out_path"
   echo "Backed up '$in_path' to '$out_path'" >&2
}

path () {
   # path FILE_OR_DIR

   echo "$(builtin cd "$(dirname "$1")"; builtin pwd)/$(basename "$1")"
}

script_dir () {
   echo "$(builtin cd "$(dirname "${BASH_SOURCE[0]}")" && builtin pwd )"
}

init_vim () {
   local vim_home_dir="$HOME/.vim"
   local vim_undo_dir="$HOME/.vim/undodir"
   local vimrc_in_path="$(script_dir)/.vimrc"
   local vimrc_out_path="$HOME/.vimrc"

   # setup .vim directories
   [ ! -d "$vim_home_dir" ] && mkdir -pv "$vim_home_dir"
   [ ! -d "$vim_undo_dir" ] && { backup "$vim_undo_dir"; mkdir -pv "$vim_undo_dir"; }

   # setup .vimrc
   if [[ -f "$vimrc_out_path" || ( -L "$vimrc_out_path" && "$vimrc_in_path" != "$(readlink "$vimrc_out_path")" ) ]]; then
      backup "$vimrc_out_path"
   fi
   ln -vs "$vimrc_in_path" "$vimrc_out_path"
}

init_readline () {
   local inputrc_in_path="$(script_dir)/.inputrc"
   local inputrc_out_path="$HOME/.inputrc"

   # setup .inputrc
   if [[ -f "$inputrc_out_path" || ( -L "$inputrc_out_path" && "$inputrc_in_path" != "$(readlink "$inputrc_out_path")" ) ]]; then
      backup "$inputrc_out_path"
   fi
   ln -vs "$inputrc_in_path" "$inputrc_out_path"
}

run () {
   init_readline 
   init_vim
}
