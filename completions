#!/bin/bash


# support completion method
_complete_using () {
   local cur="${COMP_WORDS[COMP_CWORD]}"
   COMPREPLY=($(compgen -W "$1" -- ${cur}))
}


# SSH
# completion entrypoint
_ssh () {
   local hosts="$(awk '/^Host/ {print $2}' $HOME/.ssh/config)"
   _complete_using "$hosts"
}


# GIT
# support methods
_git_branches () {
   echo -e "$(git branch | tr '*' ' ' | awk '{print $1}')"
}

_git_staged_files () {
   echo -e "$(git status --porcelain | awk '$1=="A" {print $2}')"
}

_git_unstaged_files () {
   echo -e "$(git status --porcelain | awk '$1 ~ /\?\?|M/ {print $2}')"
}

# completion entrypoint
_git () {
   git branch &>/dev/null || return

   local supported_commands="add branch checkout commit diff pull status unstage"
   if (( COMP_CWORD == 1 )); then
      _complete_using "$supported_commands"
      return
   fi

   if (( COMP_CWORD == 2 )); then
      local git_command="${COMP_WORDS[1]}"
      case "$git_command" in
         "add")      _complete_using "$(_git_unstaged_files)";;
         "branch")   _complete_using "$(_git_branches)";;
         "checkout") _complete_using "$(_git_branches)";;
         "commit")   _complete_using "-m";;
         "diff")     _complete_using "--cached";;
         "unstage")  _complete_using "$(_git_staged_files)";;
      esac
   fi
}


# ENABLE COMPLETIONS
complete -F _ssh ssh
complete -o default -F _git git
complete -o plusdirs -f -X '!*.py' python
